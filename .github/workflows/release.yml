name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: release
    runs-on: [ubuntu-latest]
    container:
      image: iotmod/goreleaser-cgo-cross-compiler:1.14.4
      volumes: [/repo]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Release HORNET
        run: goreleaser --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to PPA
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg && apt-key adv --keyserver pool.sks-keyservers.net --recv-keys ED75B5A4483DA07C
          echo "deb http://repo.aptly.info/ squeeze main" >> /etc/apt/sources.list
          apt update && apt install aptly moreutils jq -y
          aptly repo create hornet
          aptly repo add hornet dist/hornet_*_amd64.deb 
          jq '.S3PublishEndpoints += { "ppa-bucket" : { "region" : "${{ secrets.AWS_DEFAULT_REGION }}", "bucket" : "${{ secrets.AWS_BUCKET_NAME }}", "acl" : "public-read" } }' ~/.aptly.conf | sponge ~/.aptly.conf
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > /tmp/private.key 
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --import /tmp/private.key
          aptly publish repo -distribution="stable" -passphrase="$GPG_PASSPHRASE" -batch hornet s3:ppa-bucket:hornet