name: Build Docker

on:
  push

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setting env
        run: echo "::set-env name=GIT_SHA::$(git rev-parse --short "$GITHUB_SHA")"

      - name: Build HORNET Docker image
        run: docker build . -f docker/Dockerfile.dev -t sadjy/hornet:${{ GIT_SHA }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:${{ GIT_SHA }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest

      - name: Test HORNET Docker image
        run: docker run --rm --name hornet sadjy/hornet:${{ GIT_SHA }} --version 2>/dev/null | grep -q "HORNET"

      - name: AWS login
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Docker login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker push
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:${{ GIT_SHA }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest

      - name: Docker push - Release
        run: |
          echo "::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}"
          docker tag sadjy/hornet:${{ GIT_SHA }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:${{ RELEASE_VERSION }}
          docker tag sadjy/hornet:${{ GIT_SHA }} sadjy/hornet:${{ RELEASE_VERSION }}
          docker tag sadjy/hornet:${{ GIT_SHA }} sadjy/hornet:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:${{ RELEASE_VERSION }}
          docker push sadjy/hornet:${{ RELEASE_VERSION }}
          docker push sadjy/hornet:latest
          echo "::set-env name=GIT_SHA::${GITHUB_REF#refs/*/}"
        if: startsWith(github.ref, 'refs/tags/v')

        - name: Passing env var to next job
          id: git_sha
          run: echo "::set-output name=GIT_SHA::${{ GIT_SHA }}"

  trigger-deploy:
    name: Triggering deployment
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Triggering Hornet deployment
        run: |
          curl -X POST https://api.github.com/repos/sadjy/hornet/deployments \
          -H 'Accept: application/vnd.github.v3+json' \
          -u ${{ secrets.GITHUB_TOKEN }} \
          --data '{"ref": "HEAD", "task": "deploy", "automerge": false, "payload": {"hornet_ref": ${{ needs.build.outputs.git_sha }}}, "environment": "comnet", "description": "", "transient_environment": false, "production_environment": false}'
